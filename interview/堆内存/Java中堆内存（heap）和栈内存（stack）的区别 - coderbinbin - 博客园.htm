<!DOCTYPE html>
<!-- saved from url=(0045)http://www.cnblogs.com/danbing/p/5023231.html -->
<html lang="zh-cn"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园</title>
<link type="text/css" rel="stylesheet" href="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/blog-common.css">
<link type="text/css" rel="stylesheet" href="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/256685.css">
<link id="mobile-style" media="only screen and (max-width: 768px)" type="text/css" rel="stylesheet" href="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/bundle-LessIsMore-mobile.css">
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/danbing/rss">
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/danbing/rsd.xml">
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/danbing/wlwmanifest.xml">
<script async="" src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/analytics.js"></script><script src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/jquery.js" type="text/javascript"></script><style type="text/css">
:root #header + #content > #left > #rlblock_left
{ display: none !important; }</style>  
<script type="text/javascript">var currentBlogApp = 'danbing', cb_enable_mathjax=false;var isLogined=false;</script>
<script src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/blog-common.js" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>

<div id="home">
<div id="header">
	<div id="blogTitle">
		
<!--done-->
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/danbing/">金钟路上小码工</a></div>
<div class="subtitle"></div>



		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li id="nav_sitehome"><a id="blog_nav_sitehome" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li id="nav_myhome"><a id="blog_nav_myhome" class="menu" href="http://www.cnblogs.com/danbing/">首页</a></li>
<li id="nav_newpost"><a id="blog_nav_newpost" class="menu" rel="nofollow" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li id="nav_contact"><a id="blog_nav_contact" class="menu" rel="nofollow" href="https://msg.cnblogs.com/send/coderbinbin">联系</a></li>
<li id="nav_rss"><a id="blog_nav_rss" class="menu" href="http://www.cnblogs.com/danbing/rss">订阅</a>
<!--<a id="blog_nav_rss_image" class="aHeaderXML" href="http://www.cnblogs.com/danbing/rss"><img src="//www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li id="nav_admin"><a id="blog_nav_admin" class="menu" rel="nofollow" href="https://i.cnblogs.com/">管理</a></li>
</ul>

		<div class="blogStats">
			
			<div id="blog_stats">
<!--done-->
随笔-26&nbsp;
文章-0&nbsp;
评论-7&nbsp;
</div>
			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<div id="post_detail">
<!--done-->
<div id="topics">
	<div class="post">
		<h1 class="postTitle">
			<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/danbing/p/5023231.html">Java中堆内存（heap）和栈内存（stack）的区别</a>
		</h1>
		<div class="clear"></div>
		<div class="postBody">
			<div id="cnblogs_post_body"><p><strong><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 18px; color: #ff6600;">在Java代码中，常常会使用到这样的类的声明实例化：</span></strong></p>
<p style="margin-left: 30px;"><span style="font-family: verdana, geneva; font-size: 16px; color: #363d4c;">Person per = new Person();</span></p>
<p style="margin-left: 30px;"><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;">//这其实是包含了两个步骤，声明和实例化</span></p>
<p style="margin-left: 30px;"><span style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 16px; color: #363d4c;">Person per = null; //声明一个名为Person类的对象per</span></p>
<p style="margin-left: 30px;"><span style="font-family: tahoma, arial, helvetica, sans-serif;"><span style="font-size: 16px; color: #363d4c;">per = new Person(); // 实例化这个per对象</span></span></p>
<p><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;"><strong><span style="color: #799fda;">声明</span>&nbsp;</strong>指的是创建类的对象的过程；</span></p>
<p><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;"><span style="color: #799fda;"><strong>实例化&nbsp;</strong></span>指的是用关键词new来开辟内存空间。</span></p>
<p style="margin-left: 30px;"><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;">它们在内存中的划分是这样的：</span></p>
<p style="text-align: left;"><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;"><img style="display: block; margin-left: auto; margin-right: auto;" src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/848193-20151206120547018-1139699566.png" alt="" width="413" height="234"></span></p>
<p><span style="font-size: 18px;"><strong><span style="font-family: &#39;Microsoft YaHei&#39;; color: #ff6600;">那什么是栈内存（heap）和栈内存（heap）呢？</span></strong></span></p>
<h4><span style="color: #799fda; font-size: 18px;"><strong><span style="font-family: &#39;Microsoft YaHei&#39;;">栈内存：</span></strong></span></h4>
<p><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;">&nbsp; &nbsp; &nbsp; &nbsp;在函数中定义的一些基本类型的变量和对象的引用变量都在函数的栈内存中分配。栈内存主要存放的是基本类型类型的数据 如( int, short, long, byte, float, double, boolean, char) 和对象句柄。注意：并没有String基本类型、在栈内存的数据的大小及生存周期是必须确定的、其优点是寄存速度快、栈数据可以共享、缺点是数据固定、不够灵活。</span></p>
<h4><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 18px; color: #799fda;">栈的共享：</span></h4>
<div>
<div>
<div class="cnblogs_Highlighter sh-gutter" style="text-align: left;">
<div><div id="highlighter_875736" class="syntaxhighlighter  java"><div class="toolbar"><span><a href="http://www.cnblogs.com/danbing/p/5023231.html#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String str1 = </code><code class="java string">"myString"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">String str2 = </code><code class="java string">"myString"</code><code class="java plain">;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java plain">System.out.println(str1 ==str2 );</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java comments">//注意：这里使用的是str1 ==str2，而不是str1.equals(str2)的方式。</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java comments">//因为根据JDK的说明，==号只有在两个引用都指向了同一个对象时才返回真值</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java comments">//而str1.equals(str2)，只是比较两个字符串是否相等&nbsp; </code></div></div></td></tr></tbody></table></div></div>
</div>
<p>　　<span style="line-height: 1.5;">　</span><span style="color: #363d4c; font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; line-height: 1.5;">结果为True，这就说明了str1和str2其实指向的是同一个值。</span></p>
</div>
</div>
<p><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;">&nbsp; &nbsp; &nbsp; &nbsp;上述代码的原理是，首先在栈中创建一个变量为str1的引用，然后查找栈中是否有myString这个值，如果没找到，就将myString存放进来，然后将str1指向myString。接着处理String str2 = "myString";；在创建完str2&nbsp;的引用变量后，因为在栈中已经有myString这个值，便将str2&nbsp;直接指向myString。这样，就出现了str1与str2&nbsp;同时指向myString。</span></p>
<p><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;">&nbsp; &nbsp; &nbsp; &nbsp;特别注意的是，<span style="color: #ff0000;">这种字面值的引用与类对象的引用不同</span>。假定两个类对象的引用同时指向一个对象，如果一个对象引用变量修改了这个对象的内部状态，那么另一个对象引用变量也即刻反映出这个变化。相反，通过字面值的引用来修改其值，不会导致另一个指向此字面值的引用的值也跟着改变的情况。如上例，我们定义完str1与str2&nbsp;的值后，再令str1=yourString；那么，str2不会等于yourString，还是等于myString。在编译器内部，遇到str1=yourString；时，它就会重新搜索栈中是否有yourString的字面值，如果没有，重新开辟地址存放yourString的值；如果已经有了，则直接将str1指向这个地址。因此str1值的改变不会影响到str2的值。</span></p>
<p>&nbsp;</p>
<h4><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 18px; color: #799fda;">堆内存：</span></h4>
<p style="margin-left: 30px;"><span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;">堆内存用来存放所有new 创建的对象和 数组的数据</span></p>
<div>
<div class="cnblogs_Highlighter sh-gutter">
<div><div id="highlighter_954546" class="syntaxhighlighter  java"><div class="toolbar"><span><a href="http://www.cnblogs.com/danbing/p/5023231.html#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String str1 = </code><code class="java keyword">new</code> <code class="java plain">String (</code><code class="java string">"myString"</code><code class="java plain">); </code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">String str2 = </code><code class="java string">"myString"</code><code class="java plain">; </code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java plain">System.out.println(str1 ==str2 ); </code><code class="java comments">//False </code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java plain">String str1 = </code><code class="java keyword">new</code> <code class="java plain">String (</code><code class="java string">"myString"</code><code class="java plain">); </code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java plain">String str2 = </code><code class="java keyword">new</code> <code class="java plain">String (</code><code class="java string">"myString"</code><code class="java plain">); </code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java plain">System.out.println(a==b); </code><code class="java comments">//False </code></div></div></td></tr></tbody></table></div></div>
</div>
<p>　　<span style="font-family: &#39;Microsoft YaHei&#39;; font-size: 16px; color: #363d4c;"><span style="line-height: 1.5;">创建了两个引用，创建了两个对象。两个引用分别指向不同的两个对象。以上两段代码说明，只要是用new()来新建对象的，都会在堆中创建，而且其字符串是单独存值的，即使与栈中的数据相同，也不会与栈中的数据共享。</span></span></p>
</div>
<p style="margin-left: 60px;">&nbsp;</p>
<pre><span style="color: #363d4c;"><span style="font-family: &#39;comic sans ms&#39;, sans-serif; font-size: 14px;">&nbsp;</span></span></pre></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory">分类: <a href="http://www.cnblogs.com/danbing/category/782858.html" target="_blank">Java Learning</a></div>
<div id="EntryTag"></div>
<div id="blog_post_info"><div id="green_channel">
        <a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(5023231,cb_blogId,1);green_channel_success(this,&#39;谢谢推荐！&#39;);">好文要顶</a>
            <a id="green_channel_follow" onclick="follow(&#39;273da963-5f97-e511-9fc1-ac853d9f53cc&#39;);" href="javascript:void(0);">关注我</a>
    <a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a>
    <a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/icon_weibo_24.png" alt=""></a>
    <a id="green_channel_wechat" href="javascript:void(0);" title="分享至微信" onclick="shareOnWechat()"><img src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/wechat.png" alt=""></a>
</div>
<div id="author_profile">
    <div id="author_profile_info" class="author_profile_info">
            <a href="http://home.cnblogs.com/u/danbing/" target="_blank"><img src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/20151226200938.png" class="author_avatar" alt=""></a>
        <div id="author_profile_detail" class="author_profile_info">
            <a href="http://home.cnblogs.com/u/danbing/">coderbinbin</a><br>
            <a href="http://home.cnblogs.com/u/danbing/followees">关注 - 8</a><br>
            <a href="http://home.cnblogs.com/u/danbing/followers">粉丝 - 8</a>
        </div>
    </div>
    <div class="clear"></div>
    <div id="author_profile_honor"></div>
    <div id="author_profile_follow">
                <a href="javascript:void(0);" onclick="follow(&#39;273da963-5f97-e511-9fc1-ac853d9f53cc&#39;);return false;">+加关注</a>
    </div>
</div>
<div id="div_digg">
    <div class="diggit" onclick="votePost(5023231,&#39;Digg&#39;)">
        <span class="diggnum" id="digg_count">0</span>
    </div>
    <div class="buryit" onclick="votePost(5023231,&#39;Bury&#39;)">
        <span class="burynum" id="bury_count">0</span>
    </div>
    <div class="clear"></div>
    <div class="diggword" id="digg_tips">
    </div>
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a href="http://www.cnblogs.com/danbing/p/5020624.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/danbing/p/5020624.html" title="发布于2015-12-04 21:53">Android Service 启动和停止服务</a><br><a href="http://www.cnblogs.com/danbing/p/5034108.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/danbing/p/5034108.html" title="发布于2015-12-09 20:24">Java中关键字super与this的区别</a><br></div>
</div>


		</div>
		<div class="postDesc">posted @ <span id="post-date">2015-12-06 12:10</span> <a href="http://www.cnblogs.com/danbing/">coderbinbin</a> 阅读(<span id="post_view_count">1596</span>) 评论(<span id="post_comment_count">1</span>)  <a href="https://i.cnblogs.com/EditPosts.aspx?postid=5023231" rel="nofollow">编辑</a> <a href="http://www.cnblogs.com/danbing/p/5023231.html#" onclick="AddToWz(5023231);return false;">收藏</a></div>
	</div>
	<script type="text/javascript">var allowComments=true,cb_blogId=256685,cb_entryId=5023231,cb_blogApp=currentBlogApp,cb_blogUserGuid='273da963-5f97-e511-9fc1-ac853d9f53cc',cb_entryCreatedDate='2015/12/6 12:10:00';loadViewCount(cb_entryId);</script>
	
</div><!--end: topics 文章、评论容器-->
</div><a name="!comments"></a><div id="blog-comments-placeholder"><div id="comments_pager_top"></div>
<!--done-->
<div class="feedback_area_title">评论列表</div>
<div class="feedbackNoItems"></div>
	

		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="http://www.cnblogs.com/danbing/p/5023231.html#3321623" class="layer">#1楼</a><a name="3321623" id="comment_anchor_3321623"></a><span id="comment-maxId" style="display:none;">3321623</span><span id="comment-maxDate" style="display:none;">2015/12/6 16:08:01</span>  <span class="comment_date">2015-12-06 16:08</span> <a id="a_comment_author_3321623" href="http://www.cnblogs.com/hasse/" target="_blank">codersai</a> <a href="http://msg.cnblogs.com/send/codersai" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3321623" class="blog_comment_body">《Java入门到精通》p141也有介绍的，p142有张图比较清晰的说明了这个问题的~楼主加油！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3321623,&#39;Digg&#39;,this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3321623,&#39;Bury&#39;,this)">反对(0)</a></div><span id="comment_3321623_avatar" style="display:none;">http://pic.cnblogs.com/face/810339/20151130204935.png</span>
			</div>
		</div>
	<div id="comments_pager_bottom"></div></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="http://www.cnblogs.com/danbing/p/5023231.html#" onclick="return RefreshPage();">刷新页面</a><a href="http://www.cnblogs.com/danbing/p/5023231.html#top">返回顶部</a></div>
<div id="comment_form_container"><div class="login_tips">注册用户登录后才能发表评论，请 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return login(&#39;commentform&#39;);">登录</a> 或 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return register();">注册</a>，<a href="http://www.cnblogs.com/">访问</a>网站首页。</div></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="ad_t2"><a href="http://www.ucancode.com/index.htm" target="_blank">【推荐】50万行VC++源码: 大型组态工控、电力仿真CAD与GIS源码库</a><br><a href="http://click.aliyun.com/m/21970/" target="_blank">【阿里云】云计算科技红利邀您免费体验！云服务器、云数据库等35+产品，6个月免费使用！</a><br></div>
<div id="opt_under_post"></div>
<div id="cnblogs_c1" class="c_ad_block"><a href="http://cn.udacity.com/android/?utm_source=cnbolg&amp;utm_medium=referral&amp;utm_campaign=AND03" target="_blank"><img width="300" height="250" src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/24442-20170613154413368-1655528381.jpg" alt="Andorid_0613"></a></div>
<div id="under_post_news"><div class="itnews c_ad_block"><b>最新IT新闻</b>:<br> ·  <a href="http://news.cnblogs.com/n/571726/" target="_blank">死磕高通/Intel！华为研发麒麟新处理器：支持5G网络</a><br> ·  <a href="http://news.cnblogs.com/n/571725/" target="_blank">百度外卖小哥逆行被查 婉转"揭发"同行美团</a><br> ·  <a href="http://news.cnblogs.com/n/571710/" target="_blank">E3观察：得不到的微软在骚动，被偏爱的索尼有恃无恐</a><br> ·  <a href="http://news.cnblogs.com/n/571723/" target="_blank">赞！跨年龄人脸检测技术：帮助定位和寻找失踪人士</a><br> ·  <a href="http://news.cnblogs.com/n/571724/" target="_blank">支付宝连发3个月福利！消费随机立减：最高可免单</a><br>» <a href="http://news.cnblogs.com/" title="IT新闻" target="_blank">更多新闻...</a></div></div>
<div id="cnblogs_c2" class="c_ad_block"><a href="https://www.mtyun.com/activity-anniversary?site=cnblogs&amp;campaign=20170601sales" target="_blank"><img width="468" height="60" src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/24442-20170615095125603-13625507.png" alt="美团云"></a></div>
<div id="under_post_kb"><div class="itnews c_ad_block" id="kb_block"><b>最新知识库文章</b>:<br><div id="kb_recent"> ·  <a href="http://kb.cnblogs.com/page/570194/" target="_blank">小printf的故事：什么是真正的程序员？</a><br> ·  <a href="http://kb.cnblogs.com/page/569992/" target="_blank">程序员的工作、学习与绩效</a><br> ·  <a href="http://kb.cnblogs.com/page/569056/" target="_blank">软件开发为什么很难</a><br> ·  <a href="http://kb.cnblogs.com/page/565901/" target="_blank">唱吧DevOps的落地，微服务CI/CD的范本技术解读</a><br> ·  <a href="http://kb.cnblogs.com/page/566523/" target="_blank">程序员，如何从平庸走向理想？</a><br></div>» <a href="http://kb.cnblogs.com/" target="_blank">更多知识库文章...</a></div></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
    fixPostBody();
    setTimeout(function () { incrementViewCount(cb_entryId); }, 50);
    deliverAdT2();
    deliverAdC1();
    deliverAdC2();    
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);   
</script>
</div>


	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news">总访问量：
<div align="center"><a href="http://www.amazingcounters.com/">
<img border="0" src="./Java中堆内存（heap）和栈内存（stack）的区别 - coderbinbin - 博客园_files/counter.php" alt="PV" title="总访问量"></a></div>
<a href="http://www.amazingcounters.com/">
</a><div id="profile_block">昵称：<a href="http://home.cnblogs.com/u/danbing/">coderbinbin</a><br>园龄：<a href="http://home.cnblogs.com/u/danbing/" title="入园时间：2015-11-30">1年6个月</a><br>粉丝：<a href="http://home.cnblogs.com/u/danbing/followers/">8</a><br>关注：<a href="http://home.cnblogs.com/u/danbing/followees/">8</a><div id="p_b_follow"><a href="javascript:void(0);" onclick="follow(&#39;273da963-5f97-e511-9fc1-ac853d9f53cc&#39;)">+加关注</a></div></div></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="calendar"><div id="blog-calendar" style=""><table id="blogCalendar" class="Cal" cellspacing="0" cellpadding="0" title="Calendar">
	<tbody><tr><td colspan="7"><table class="CalTitle" cellspacing="0">
		<tbody><tr><td class="CalNextPrev"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2017/05/01&#39;);return false;">&lt;</a></td><td align="center">2017年6月</td><td class="CalNextPrev" align="right"><a href="javascript:void(0);" onclick="loadBlogCalendar(&#39;2017/07/01&#39;);return false;">&gt;</a></td></tr>
	</tbody></table></td></tr><tr><th class="CalDayHeader" align="center" abbr="日" scope="col">日</th><th class="CalDayHeader" align="center" abbr="一" scope="col">一</th><th class="CalDayHeader" align="center" abbr="二" scope="col">二</th><th class="CalDayHeader" align="center" abbr="三" scope="col">三</th><th class="CalDayHeader" align="center" abbr="四" scope="col">四</th><th class="CalDayHeader" align="center" abbr="五" scope="col">五</th><th class="CalDayHeader" align="center" abbr="六" scope="col">六</th></tr><tr><td class="CalOtherMonthDay" align="center">28</td><td class="CalOtherMonthDay" align="center">29</td><td class="CalOtherMonthDay" align="center">30</td><td class="CalOtherMonthDay" align="center">31</td><td align="center">1</td><td align="center">2</td><td class="CalWeekendDay" align="center">3</td></tr><tr><td class="CalWeekendDay" align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td class="CalWeekendDay" align="center">10</td></tr><tr><td class="CalWeekendDay" align="center">11</td><td align="center">12</td><td align="center">13</td><td align="center">14</td><td class="CalTodayDay" align="center">15</td><td align="center">16</td><td class="CalWeekendDay" align="center">17</td></tr><tr><td class="CalWeekendDay" align="center">18</td><td align="center">19</td><td align="center">20</td><td align="center">21</td><td align="center">22</td><td align="center">23</td><td class="CalWeekendDay" align="center">24</td></tr><tr><td class="CalWeekendDay" align="center">25</td><td align="center">26</td><td align="center">27</td><td align="center">28</td><td align="center">29</td><td align="center">30</td><td class="CalOtherMonthDay" align="center">1</td></tr><tr><td class="CalOtherMonthDay" align="center">2</td><td class="CalOtherMonthDay" align="center">3</td><td class="CalOtherMonthDay" align="center">4</td><td class="CalOtherMonthDay" align="center">5</td><td class="CalOtherMonthDay" align="center">6</td><td class="CalOtherMonthDay" align="center">7</td><td class="CalOtherMonthDay" align="center">8</td></tr>
</tbody></table></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"><div id="sidebar_search" class="sidebar-block">
<div id="sidebar_search" class="mySearch">
<h3 class="catListTitle">搜索</h3>
<div id="sidebar_search_box">
<div id="widget_my_zzk" class="div_my_zzk"><input type="text" id="q" onkeydown="return zzk_go_enter(event);" class="input_my_zzk">&nbsp;<input onclick="zzk_go()" type="button" value="找找看" id="btnZzk" class="btn_my_zzk"></div>
<div id="widget_my_google" class="div_my_zzk"><input type="text" name="google_q" id="google_q" onkeydown="return google_go_enter(event)" class="input_my_zzk">&nbsp;<input onclick="google_go()" type="button" value="谷歌搜索" class="btn_my_zzk"></div>
</div>
</div>

</div><div id="sidebar_shortcut" class="sidebar-block">
<div class="catListLink">
<h3 class="catListTitle">常用链接</h3>
<ul>
<li><a href="http://www.cnblogs.com/danbing/p/" title="我的博客的随笔列表">我的随笔</a></li><li><a href="http://www.cnblogs.com/danbing/MyComments.html" title="我发表过的评论列表">我的评论</a></li><li><a href="http://www.cnblogs.com/danbing/OtherPosts.html" title="我评论过的随笔列表">我的参与</a></li><li><a href="http://www.cnblogs.com/danbing/RecentComments.html" title="我的博客的评论列表">最新评论</a></li><li><a href="http://www.cnblogs.com/danbing/tag/" title="我的博客的标签列表">我的标签</a></li>
</ul>
<div id="itemListLin_con" style="display:none;">
<ul>

</ul>
</div>
</div></div><div id="sidebar_toptags" class="sidebar-block">
<div class="catListTag">
<h3 class="catListTitle">我的标签</h3>
<ul>
<li><a href="http://www.cnblogs.com/danbing/tag/Android/">Android</a>(1)</li><li><a href="http://www.cnblogs.com/danbing/tag/DI/">DI</a>(1)</li><li><a href="http://www.cnblogs.com/danbing/tag/IoC/">IoC</a>(1)</li><li><a href="http://www.cnblogs.com/danbing/tag/Java/">Java</a>(1)</li><li><a href="http://www.cnblogs.com/danbing/tag/%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC/">控制反转</a>(1)</li><li><a href="http://www.cnblogs.com/danbing/tag/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/">依赖注入</a>(1)</li>
</ul>
</div></div><div id="sidebar_categories">
<div class="catListPostCategory">
<h3 class="catListTitle">随笔分类</h3>

<ul>

<li><a id="CatList_LinkList_0_Link_0" href="http://www.cnblogs.com/danbing/category/782011.html">Android Learning(5)</a> </li>

<li><a id="CatList_LinkList_0_Link_1" href="http://www.cnblogs.com/danbing/category/782859.html">Data structure(4)</a> </li>

<li><a id="CatList_LinkList_0_Link_2" href="http://www.cnblogs.com/danbing/category/782858.html">Java Learning(15)</a> </li>

</ul>

</div>

<div class="catListPostArchive">
<h3 class="catListTitle">随笔档案</h3>

<ul>

<li><a id="CatList_LinkList_1_Link_0" href="http://www.cnblogs.com/danbing/archive/2016/06.html">2016年6月 (2)</a> </li>

<li><a id="CatList_LinkList_1_Link_1" href="http://www.cnblogs.com/danbing/archive/2016/03.html">2016年3月 (1)</a> </li>

<li><a id="CatList_LinkList_1_Link_2" href="http://www.cnblogs.com/danbing/archive/2016/02.html">2016年2月 (2)</a> </li>

<li><a id="CatList_LinkList_1_Link_3" href="http://www.cnblogs.com/danbing/archive/2016/01.html">2016年1月 (6)</a> </li>

<li><a id="CatList_LinkList_1_Link_4" href="http://www.cnblogs.com/danbing/archive/2015/12.html">2015年12月 (15)</a> </li>

</ul>

</div>

</div><div id="sidebar_recentcomments" class="sidebar-block"><div id="recent_comments_wrap">
<div class="catListComment">
<h3 class="catListTitle">最新评论</h3>
	<div id="RecentCommentsBlock"><ul>
        <li class="recent_comment_title"><a href="http://www.cnblogs.com/danbing/p/5034108.html#3650927">1. Re:Java中关键字super与this的区别</a></li>
        <li class="recent_comment_body">...你的图你确定你画对了吗？</li>
        <li class="recent_comment_author">--tqq-m</li>
        <li class="recent_comment_title"><a href="http://www.cnblogs.com/danbing/p/5215189.html#3596941">2. Re:Android Learning：微信第三方登录</a></li>
        <li class="recent_comment_body">您好，我最近在接原生的android微信第三方登录，现在碰到一个问题：只有当我的微信客户端处在登陆状态且在后台运行时，才能成功授权，（微信客户端处于登录状态但后台杀死也不行），其他情况下WXEntry......</li>
        <li class="recent_comment_author">--kaission</li>
        <li class="recent_comment_title"><a href="http://www.cnblogs.com/danbing/p/5215189.html#3367807">3. Re:Android Learning：微信第三方登录</a></li>
        <li class="recent_comment_body">赞</li>
        <li class="recent_comment_author">--HooHooE</li>
        <li class="recent_comment_title"><a href="http://www.cnblogs.com/danbing/p/5096008.html#3347047">4. Re:Java 中 Comparable 和 Comparator 比较（转）</a></li>
        <li class="recent_comment_body">感谢分享！受益匪浅！中国JAVA发展有你一份！</li>
        <li class="recent_comment_author">--蛋饼之恋</li>
        <li class="recent_comment_title"><a href="http://www.cnblogs.com/danbing/p/5023231.html#3321623">5. Re:Java中堆内存（heap）和栈内存（stack）的区别</a></li>
        <li class="recent_comment_body">《Java入门到精通》p141也有介绍的，p142有张图比较清晰的说明了这个问题的~楼主加油！</li>
        <li class="recent_comment_author">--codersai</li>
</ul>
</div>
</div>
</div></div><div id="sidebar_topviewedposts" class="sidebar-block"><div id="topview_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">阅读排行榜</h3>
	<div id="TopViewPostsBlock"><ul><li><a href="http://www.cnblogs.com/danbing/p/5035189.html">1. Java中抽象类和接口的用法和区别(3858)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5215189.html">2. Android Learning：微信第三方登录(2897)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5319820.html">3. Java Learning：并发中的同步锁（synchronized）(2400)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5034108.html">4. Java中关键字super与this的区别(2391)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5023231.html">5. Java中堆内存（heap）和栈内存（stack）的区别(1597)</a></li></ul></div>
</div>
</div></div><div id="sidebar_topcommentedposts" class="sidebar-block"><div id="topfeedback_posts_wrap">
<div class="catListFeedback">
<h3 class="catListTitle">评论排行榜</h3>
	<div id="TopFeedbackPostsBlock"><ul><li><a href="http://www.cnblogs.com/danbing/p/5017624.html">1. Android 子线程中进行UI操作遇到的小问题(2)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5215189.html">2. Android Learning：微信第三方登录(2)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5096008.html">3. Java 中 Comparable 和 Comparator 比较（转）(1)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5034108.html">4. Java中关键字super与this的区别(1)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5023231.html">5. Java中堆内存（heap）和栈内存（stack）的区别(1)</a></li></ul></div>
</div>
</div></div><div id="sidebar_topdiggedposts" class="sidebar-block"><div id="topdigg_posts_wrap">
<div class="catListView">
<h3 class="catListTitle">推荐排行榜</h3>
<div id="TopDiggPostsBlock"><ul><li><a href="http://www.cnblogs.com/danbing/p/5319820.html">1. Java Learning：并发中的同步锁（synchronized）(1)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5215189.html">2. Android Learning：微信第三方登录(1)</a></li><li><a href="http://www.cnblogs.com/danbing/p/5164242.html">3. Android Learning：数据存储方案归纳与总结(1)</a></li></ul></div>
</div></div></div></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		
<!--done-->
Copyright ©2017 coderbinbin
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


</body></html>